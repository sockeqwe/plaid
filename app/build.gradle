/*
 * Copyright 2015 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'com.fernandocejas.frodo'

// query git for the SHA, Tag and commit count. Use these to automate versioning.
def gitSha = 'git rev-parse --short HEAD'.execute([], project.rootDir).text.trim()
def gitTag = 'git describe --tags'.execute([], project.rootDir).text.trim()
def gitCommitCount = 100 + Integer.parseInt(
    'git rev-list --count HEAD'.execute([], project.rootDir).text.trim())

android {
  compileSdkVersion 25
  buildToolsVersion '25.0.2'

  defaultConfig {
    applicationId "io.plaidapp"
    minSdkVersion 21
    targetSdkVersion 25
    versionCode gitCommitCount
    versionName gitTag
    archivesBaseName = "plaid-${versionName}"
    buildConfigField "String", "GIT_SHA", "\"${gitSha}\""
    buildConfigField "String", "DRIBBBLE_CLIENT_ID", "\"${dribbble_client_id}\""
    buildConfigField "String", "DRIBBBLE_CLIENT_SECRET", "\"${dribbble_client_secret}\""
    buildConfigField "String",
        "DRIBBBLE_CLIENT_ACCESS_TOKEN", "\"${dribbble_client_access_token}\""
    buildConfigField "String", "DESIGNER_NEWS_CLIENT_ID", "\"${designer_news_client_id}\""
    buildConfigField "String",
        "DESIGNER_NEWS_CLIENT_SECRET", "\"${designer_news_client_secret}\""
    buildConfigField "String",
        "PROCUCT_HUNT_DEVELOPER_TOKEN", "\"${product_hunt_developer_token}\""
  }
  buildTypes {
    release {
      lintOptions {
        checkReleaseBuilds false
        abortOnError false
      }
    }
  }
  compileOptions {
    sourceCompatibility JavaVersion.VERSION_1_7
    targetCompatibility JavaVersion.VERSION_1_7
  }
}

repositories {
  jcenter()

  maven {
    url "https://oss.sonatype.org/content/repositories/snapshots/"
  }
}

ext {
  supportLibVersion = '25.1.1'
  sqlbriteDao = '0.6.1'
  dagger = '1.2.5'
}

dependencies {
  compile "com.android.support:support-v4:${supportLibVersion}"
  compile "com.android.support:palette-v7:${supportLibVersion}"
  compile "com.android.support:recyclerview-v7:${supportLibVersion}"
  compile "com.android.support:design:${supportLibVersion}"
  compile "com.android.support:customtabs:${supportLibVersion}"
  compile 'com.squareup.retrofit:retrofit:1.9.0'
  compile 'com.squareup.okhttp:okhttp:2.5.0'
  compile 'com.github.bumptech.glide:glide:3.6.1'
  compile 'com.github.bumptech.glide:okhttp-integration:1.3.0'
  compile 'com.jakewharton:butterknife:7.0.1'
  kapt 'com.jakewharton:butterknife:7.0.1'
  compile 'org.jsoup:jsoup:1.8.3'
  compile project(':bypass')

  // Kotlin
  compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"

  // Dagger
  compile "com.squareup.dagger:dagger:${dagger}"
  kapt "com.squareup.dagger:dagger-compiler:${dagger}"

  // Third party libs
  compile 'io.reactivex:rxjava:1.0.16'
  compile 'io.reactivex:rxandroid:1.0.1'
  compile 'com.hannesdorfmann.mosby:viewstate:2.0.0'

  // Database
  compile 'com.squareup.sqlbrite:sqlbrite:0.6.1'
  compile "com.hannesdorfmann.sqlbrite:dao:${sqlbriteDao}"
  compile "com.hannesdorfmann.sqlbrite:annotations:${sqlbriteDao}"
  kapt "com.hannesdorfmann.sqlbrite:object-mapper:${sqlbriteDao}"



  // Test dependencies
  testCompile 'org.robolectric:robolectric:3.0'
  testCompile 'org.mockito:mockito-core:2.0.31-beta'
  testCompile 'junit:junit:4.12'
}



buildscript {
  ext.kotlin_version = '1.0.6'
  repositories {
    mavenCentral()
  }
  dependencies {
    classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
  }
}

kapt {
  generateStubs = true
}